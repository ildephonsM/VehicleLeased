@model VehicleLeasingManager.Models.Vehicle

@{
    ViewBag.Title = "Edit Vehicle";
    Layout = "~/Views/Shared/_Layout.cshtml"; 
}

<div class="container mt-5">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Edit Vehicle</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.VehicleId)

                <div class="mb-3">
                    @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Manufacturer, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Model, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Year, new { @class = "form-control", type = "number", min = "1900", max = "2100" })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.RegistrationNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.SupplierId, "Supplier", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("SupplierId", null, "-- Select Supplier --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.BranchId, "Branch", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("BranchId", null, "-- Select Branch --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ClientId, "Client", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("ClientId", null, "-- Select Client --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.DriverId, "Driver", htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownList("DriverId", null, "-- Select Driver --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a href="@Url.Action("Index")" class="btn btn-secondary">Back to List</a>
                    <button type="submit" class="btn btn-success">Save Changes</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
